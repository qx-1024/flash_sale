server:
  port: 8070

spring:
  application:
    name: order-service
  # MySQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/flash-sale?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
    username: root
    password: mysql
  # Nacos
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
  # Redis
  data:
    redis:
      host: 192.168.182.128
      port: 6379
      password: 123456
      database: 0
  # RabbitMQ
  rabbitmq:
    host: 192.168.182.128
    port: 5672
    virtual-host: /
    username: qiu
    password: 123456
    listener:
      simple:
        prefetch: 10  # 并发消费数量
        # SpringAMQP 利用 AOP 对消息进行环绕增强，业务正常则返回 ack，异常则返回 nack 或 reject
        acknowledge-mode: auto
        retry:
          enabled: true
          initial-interval: 1000ms
          max-attempts: 3
          multiplier: 2
          # 是否是无状态的，如果为 true，则每次重试都是一个新的 consumer
          # 如果为 false，则重试使用的是原来的 consumer
          # 业务中包含事务，则使用 false
          stateless: true

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl